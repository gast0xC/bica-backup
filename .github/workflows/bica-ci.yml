name: BICA Backup CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  IMAGE_NAME: bica-backup
  TAG: test

jobs:
  build-and-test:
    name: Build & Validate Backup
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create Docker network
        run: docker network create bica-net

      - name: Start PostgreSQL
        run: |
          docker run -d \
            --name postgres-db \
            --network bica-net \
            -e POSTGRES_USER=myuser \
            -e POSTGRES_PASSWORD=mypass \
            -e POSTGRES_DB=mydatabase \
            -p 5432:5432 \
            postgres:15

      - name: Wait for Postgres to be ready
        run: |
          sudo apt-get update && sudo apt-get install -y postgresql-client
          for i in {1..30}; do
            pg_isready -h localhost -p 5432 -U myuser && echo "Postgres is ready" && exit 0
            echo "Waiting for Postgres..."
            sleep 2
          done
          echo "Postgres did not become ready in time"
          exit 1
        env:
          PGPASSWORD: mypass

      - name: Build backup container
        run: docker build -t $IMAGE_NAME:$TAG .

      - name: Prepare backup folder
        run: |
          mkdir -p ./backups
          chmod 777 ./backups

      - name: Run backup script in container
        run: |
          docker run --rm \
            --network bica-net \
            -e DB_HOST=postgres-db \
            -e DB_PORT=5432 \
            -e DB_USER=myuser \
            -e DB_PASSWORD=mypass \
            -e DB_NAME=mydatabase \
            -e BACKUP_DIR=/mnt/backups \
            -e RETENTION_DAYS=7 \
            -e ENCRYPT=false \
            -v ${{ github.workspace }}/backups:/mnt/backups \
            $IMAGE_NAME:$TAG /backup.sh

      - name: Check backup file
        run: |
          echo "Files in backup folder:"
          ls -lh ./backups

          echo "Verifying .tar.gz existence..."
          shopt -s nullglob
          files=(./backups/*.tar.gz)
          if [ ${#files[@]} -eq 0 ]; then
            echo "Backup not created!"
            exit 1
          else
            echo "Backup found: ${files[@]}"
          fi

      - name: Cleanup
        if: always()
        run: |
          docker rm -f postgres-db || true
          docker network rm bica-net || true

  docker-publish:
    name: Push to Docker Hub
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image for publishing
        run: docker build -t $IMAGE_NAME:$TAG .

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push image to Docker Hub
        run: |
          docker tag $IMAGE_NAME:$TAG ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:latest
